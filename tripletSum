Solution 1:
l1 = [int(x) for x in input().split()]
sum = int(input())

def tripletSum(l1, sum):
    output =[]
    for i in range(0, len(l1)-2):
        firstNum = sum - l1[i]
        for j in range(i+1, len(l1)-1):
            secondNum = sum - firstNum
            for k in range(j+1, len(l1)):
                if l1[i] + l1[j] + l1[k] == sum:
                    triplet = [l1[i], l1[j], l1[k]]
                    if triplet not in output:
                        output.append(triplet)
    return output
print(tripletSum(l1, sum))


Solution 2:
l1 = [int(x) for x in input().split()]
sum = int(input())

def tripletSum(l1, sum):
    output =[]
    for i in range(0, len(l1)-1):
        s = set()
        for j in range(i+1, len(l1)):
            thirdNum = sum - l1[i] - l1[j]
            if thirdNum in s:
                triplet = [l1[i], l1[j], thirdNum]
                if triplet not in output:
                    output.append(triplet)
            else:
                s.add(l1[j])
    return output
print(tripletSum(l1, sum))
